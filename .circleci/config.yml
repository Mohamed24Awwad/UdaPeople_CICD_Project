version: 2.1

# orbs:
  # slack: circleci/slack@4.9.3
 # ---------------------------------------------------------------------------- #
 #                              Slack Notifications                             #
 # ---------------------------------------------------------------------------- #

  # commands:
  #   notify_on_failure:
  #     steps:
  #      - slack/notify:
  #         event: fail
  #         channel: MohamedAwwad
  #         template: basic_fail_1
  
   

# ---------------------------------------------------------------------------- #
#                                 Jobs Section                                 #
# ---------------------------------------------------------------------------- #

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Install prerequsites
          command: |            
            sudo apt -y install jq tar gzip git curl
      - run:
          name: Frontend Build
          command: |
            cd frontend
            npm i
            npm run build
      - save_cache:
          key: v1-frontend-build
          paths:
            - ~/project/frontend/node_modules
      # - notify_on_failure:
      #     steps:
      #       - slack/notify:
      #         event: fail

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Install prerequsites
          command: |
            sudo apt -y install jq tar gzip git curl
      - run:
          name: Backend build
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
          key: v1-backend-build
          paths:
            - ~/project/backend/node_modules
      # - notify_on_failure:
      #     steps:
      #       - slack/notify:
      #         event: fail


  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: frontend test
          command: |
            cd frontend
            npm i
            npm run test  
      # - notify_on_failure:
      #     steps:
      #       - slack/notify:
      #         event: fail

  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: backend test
          command: |
            cd backend
            npm install
            npm test
      # - notify_on_failure:
      #     steps:
      #       - slack/notify:
      #         event: fail

  scan-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: frontend scan
          command: |
            cd frontend
            npm audit --audit-level=critical
      # - notify_on_failure:
      #     steps:
      #       - slack/notify:
      #         event: fail

  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: backend scan
          command: |
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      # - notify_on_failure:
      #     steps:
      #       - slack/notify:
      #         event: fail
    
  deploy-infrastructure:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - dependencies
      # Checkout code from git
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/backend.yml \
            --stack-name udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7} \
            --tags project=udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: Ensure front-end infrastructure exist
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/frontend.yml \
            --stack-name udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7} \
            --tags project=udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            aws cloudformation describe-stacks \
            --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --query "Stacks[0].Outputs[0].OutputValue" \
            --output text >> .circleci/ansible/inventory.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - project/.circleci/ansible/inventory.txt
  

workflows:
   default:
      jobs:
       - build-frontend
       - build-backend
       - test-frontend:
          requires: [build-frontend]
       - test-backend:
          requires: [build-backend]
       - scan-backend:
          requires: [build-backend]
       - scan-frontend:
          requires: [build-frontend]
       - deploy-infrastructure:
          requires: [test-frontend, test-backend, scan-frontend, scan-backend]

      
          